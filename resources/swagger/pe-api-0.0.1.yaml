openapi: 3.0.3
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/abc6423/DIF/1.0.0
info:
  description: Decentralized Identity Foundation Presentation Exchange API
  version: "1.0.0"
  title: DIF PE API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
paths:
  /input_discriptor:
    get:
      tags:
        - developers
      summary: searches PE Input Descriptor
      operationId: searchPEInputDescriptor
      description: |
        By passing in the appropriate options, you can search for
        available Input Descriptor in the system
      parameters:
        - in: query
          name: searchString
          description: pass an optional search string for looking up PE Input Descriptor
          required: false
          schema:
            type: string
        - in: query
          name: skip
          description: number of records to skip for pagination
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/presentation_definition'
        '400':
          description: bad input parameter
    post:
      tags:
        - admins
      summary: adds an PE Input Descriptor item
      operationId: addPEInputDescriptor
      description: Adds an item to the system
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/presentation_definition'
        description: input descriptor to add
components:
  schemas:
    same_subject:
      type: object
      properties:
        field_id:
          type: array
          items:
            type: string
        directive:
          type: string
          enum:
            - required
            - preferred
      required:
        - field_id
        - directive
      additionalProperties: false
    ldp_object:
      type: object
      properties:
        proof_type:
          type: array
          minItems: 1
          items:
            type: string
      required:
        - proof_type
      additionalProperties: false
    ldp:
      $ref: '#/components/schemas/ldp_object'
    ldp_vc:
      $ref: '#/components/schemas/ldp_object'
    ldp_vp:
      $ref: '#/components/schemas/ldp_object'
    jwt_object:
      type: object
      properties:
        alg:
          type: array
          minItems: 1
          items:
            type: string
      required:
        - alg
      additionalProperties: false
    jwt:
      $ref: '#/components/schemas/jwt_object'
    jwt_vc:
      $ref: '#/components/schemas/jwt_object'
    jwt_vp:
      $ref: '#/components/schemas/jwt_object'
    submission_requirements:
      title: Submission Requirements
      type: object
      oneOf:
        - properties:
            name:
              type: string
            purpose:
              type: string
            rule:
              type: string
              enum:
                - all
                - pick
            count:
              type: integer
              minimum: 1
            min:
              type: integer
              minimum: 0
            max:
              type: integer
              minimum: 0
            from:
              type: string
          required:
            - rule
            - from
          additionalProperties: false
        - properties:
            name:
              type: string
            purpose:
              type: string
            rule:
              type: string
              enum:
                - all
                - pick
            count:
              type: integer
              minimum: 1
            min:
              type: integer
              minimum: 0
            max:
              type: integer
              minimum: 0
            from_nested:
              type: array
              minItems: 1
              items:
                $ref: '#/components/schemas/submission_requirements'
          required:
            - rule
            - from_nested
          additionalProperties: false
    schema:
      title: Schema
      type: object
      properties:
        uri:
          type: string
          format: 'uri'
        required:
          type: boolean
      required:
        - uri
      additionalProperties: false
    input_descriptors:
      title: Input Descriptor
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        purpose:
          type: string
        group:
          type: array
          items:
            type: string
        schema:
          type: array
          items:
            $ref: '#/components/schemas/schema'
        constraints:
          type: object
          properties:
            limit_disclosure:
              type: string
              enum:
                - required
                - preferred
            statuses:
              type: object
              properties:
                active:
                  type: object
                  properties:
                    directive:
                      type: string
                      enum:
                        - required
                        - allowed
                        - disallowed
                suspended:
                  type: object
                  properties:
                    directive:
                      type: string
                      enum:
                        - required
                        - allowed
                        - disallowed
                revoked:
                  type: object
                  properties:
                    directive:
                      type: string
                      enum:
                        - required
                        - allowed
                        - disallowed
            fields:
              type: array
              items:
                $ref: '#/components/schemas/field'
            subject_is_issuer:
              type: string
              enum:
                - required
                - preferred
            is_holder:
              type: array
              items:
                type: object
                properties:
                  field_id:
                    type: array
                    items:
                      type: string
                  directive:
                    type: string
                    enum:
                      - required
                      - preferred
                required:
                  - field_id
                  - directive
                additionalProperties: false
            same_subject:
              type: array
              items:
                $ref: '#/components/schemas/same_subject'
          additionalProperties: false
      required:
        - id
        - schema
      additionalProperties: false
    format:
      title: Format
      type: object
      oneOf:
        - $ref: '#/components/schemas/jwt'
        - $ref: '#/components/schemas/jwt_vc'
        - $ref: '#/components/schemas/jwt_vp'
        - $ref: '#/components/schemas/ldp'
        - $ref: '#/components/schemas/ldp_vc'
        - $ref: '#/components/schemas/ldp_vp'
      additionalProperties: false
    filter:
      title: Filter
      type: object
      properties:
        type:
          type: string
        format:
          type: string
        pattern:
          type: string
        minimum:
          oneOf:
            - type: number
            - type: string
        minLength:
          type: integer
        maxLength:
          type: integer
        exclusiveMinimum:
          oneOf:
            - type: number
            - type: string
        exclusiveMaximum:
          oneOf:
            - type: number
            - type: string
        maximum:
          oneOf:
            - type: number
            - type: string
        const:
          oneOf:
            - type: number
            - type: string
        enum:
          type: array
          items:
            oneOf:
              - type: number
              - type: string
        not:
          type: object
          minProperties: 1
      required:
        - type
      additionalProperties: false
    field:
      title: Field
      type: object
      oneOf:
        - properties:
            id:
              type: string
            path:
              type: array
              items:
                type: string
                format: "json_path" # TODO may be removed if we do not intend to implement it in our rule engine.
            purpose:
              type: string
            filter:
              $ref: '#/components/schemas/filter'
          required:
            - path
          additionalProperties: false
        - properties:
            id:
              type: string
            path:
              type: array
              items:
                type: string
            purpose:
              type: string
            filter:
              $ref: '#/components/schemas/filter'
            predicate:
              type: string
              enum:
                - required
                - preferred
          required:
            - path
            - filter
            - predicate
          additionalProperties: false
    presentation_definition:
      title: Presentation Definition
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        purpose:
          type: string
        format:
          $ref: '#/components/schemas/format'
        submission_requirements:
          type: array
          items:
            $ref: '#/components/schemas/submission_requirements'
        input_descriptors:
          type: array
          items:
            $ref: '#/components/schemas/input_descriptors'
          uniqueItems: true # TODO this is not specifically targeting the 'id' property inside the input_descriptor object.
      required:
        - id
        - input_descriptors
      additionalProperties: false
    presentation_submission:
      title: Presentation Submission
      type: object
      properties:
        submission_requirements:
          $ref: '#/components/schemas/submission_requirements'
      required:
        - submission_requirements
      additionalProperties: false

